/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pro.universidad.vistas;

import Datas.AlumnoData;
import Datas.CursadaData;
import Datas.MateriaData;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pro.universidad.modelo.Alumno;
import pro.universidad.modelo.Conexion;
import pro.universidad.modelo.Cursada;
import pro.universidad.modelo.Materia;

/**
 *
 * @author Jannete
 */
public class VistaInscripciones extends javax.swing.JInternalFrame {
    private DefaultTableModel modelo;
    private CursadaData cd;
    private MateriaData md;
    private AlumnoData ad;
    private ArrayList<Alumno> listAlumnos;
    private Conexion conexion;
    
    /**
     * Creates new form VistaInscripciones
     */
    public VistaInscripciones() {
        initComponents();
        
        try{
            conexion= new Conexion();
            modelo = new DefaultTableModel();
            cd = new CursadaData(conexion);
            md=new MateriaData(conexion);
            ad = new AlumnoData(conexion);
            listAlumnos = (ArrayList)ad.obtenerAlumnos();
            
            cargarAlumnos();
            armarCabeceraTabla();
            
            
        
            } catch (ClassNotFoundException ex) {
            Logger.getLogger(VistaAlumnosMateria.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbAlumnos = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        rbInscriptas = new javax.swing.JRadioButton();
        rbNoins = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tMaterias = new javax.swing.JTable();
        botonIns = new javax.swing.JButton();
        botonAnu = new javax.swing.JButton();
        botonSa = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        jLabel1.setText("FORMULARIO DE INSCRIPCION");

        jLabel2.setText("ALUMNO");

        cbAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAlumnosActionPerformed(evt);
            }
        });

        jLabel3.setText("LISTADO DE MATERIAS");

        rbInscriptas.setText("INSCRIPTAS");
        rbInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbInscriptasActionPerformed(evt);
            }
        });

        rbNoins.setText("NO INSCRIPTAS");
        rbNoins.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNoinsActionPerformed(evt);
            }
        });

        tMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tMaterias);

        botonIns.setText("INSCRIBIR");
        botonIns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonInsActionPerformed(evt);
            }
        });

        botonAnu.setText("ANULAR");
        botonAnu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAnuActionPerformed(evt);
            }
        });

        botonSa.setText("SALIR");
        botonSa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 17, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(jLabel2)
                                .addGap(31, 31, 31)
                                .addComponent(cbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(151, 151, 151)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(rbInscriptas)
                                .addGap(28, 28, 28)
                                .addComponent(rbNoins))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(botonIns)
                                .addGap(18, 18, 18)
                                .addComponent(botonAnu)
                                .addGap(36, 36, 36)
                                .addComponent(botonSa))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbInscriptas)
                    .addComponent(rbNoins))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonIns)
                    .addComponent(botonAnu)
                    .addComponent(botonSa))
                .addGap(0, 133, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAlumnosActionPerformed
        
        borrarFilasTabla();
        rbNoins.setSelected(false);//Para que el radio button no quede tildado
        rbInscriptas.setSelected(false);
    }//GEN-LAST:event_cbAlumnosActionPerformed

    private void botonSaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSaActionPerformed
        
        dispose();
    }//GEN-LAST:event_botonSaActionPerformed

    private void rbInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbInscriptasActionPerformed
     
        
        rbNoins.setSelected(false);// desactiva el tilde del boton
        cargarDatos();
    }//GEN-LAST:event_rbInscriptasActionPerformed

    private void rbNoinsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNoinsActionPerformed

        rbInscriptas.setSelected(false);
        cargarDatos();
    }//GEN-LAST:event_rbNoinsActionPerformed

    private void botonInsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonInsActionPerformed
        
        Alumno al = (Alumno)cbAlumnos.getSelectedItem();//1-obtengo el alumno seleccionado
        Cursada cur = new Cursada();//2-Creo el objeto cursada
        cur.setAlumno(al);//3- le seteo a la cursada el alumno
        
        
        int idMateria = Integer.parseInt(tMaterias.getValueAt(tMaterias.getSelectedRow(), 0).toString());//sobre la tabla materia obtengo el valor, 
        //de la columna cero de la row seleccinada(que es donde guarde el id de la materia en la tabla en la primer columna y lo parseo a int

        Materia mat = md.buscarMateria(idMateria);//creo la variable materia ,Busco la materia
        cur.setMateria(mat);
        
        cd.guardarCursada(cur);
        
        JOptionPane.showMessageDialog(null,"Inscripcion Realizada ");
    }//GEN-LAST:event_botonInsActionPerformed

    private void botonAnuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAnuActionPerformed
        
        Alumno al = (Alumno)cbAlumnos.getSelectedItem();//1-Para obtener el idAlumno
        
        int idMateria = Integer.parseInt(tMaterias.getValueAt(tMaterias.getSelectedRow(), 0).toString());//2-obtengo el idMateria
        
        cd.borrarCursadaDeUnaMateriaDeUnAlumno(al.getIdAlumno(), idMateria);//3-Llamo al metodo de CursadaData
        
        JOptionPane.showMessageDialog(null,"Inscripcion Anulada");
    }//GEN-LAST:event_botonAnuActionPerformed
    
    public void cargarAlumnos(){
        for(Alumno a: listAlumnos){
            
            cbAlumnos.addItem(a);
        }
    }
    public void armarCabeceraTabla(){
        ArrayList<Object>columns=new ArrayList<Object>();//se agregan los titulos de las columnas
        
        columns.add("ID");
        columns.add("Nombre");
        columns.add("Año");
        
        for(Object it:columns){
            modelo.addColumn(it);
        }
        tMaterias.setModel(modelo);//aca viene el modelo que arme
    }
    
    public void borrarFilasTabla(){//Para mostrar datos nuevos
        int a = modelo.getRowCount()-1;//Row: cada fila
        for(int i=a; i>=0 ;i--){
            
            modelo.removeRow(i);
        }
    }
    public void cargarDatos(){
        
        borrarFilasTabla();
        
        Alumno al = (Alumno)cbAlumnos.getSelectedItem();
        
        if(rbInscriptas.isSelected()){
            List<Cursada>listCursadas=cd.obtenerCursadasxAlumno(al.getIdAlumno());
          for(Cursada a:listCursadas){
            
            if(a.getAlumno().getIdAlumno()==al.getIdAlumno()){
                
                modelo.addRow(new Object []{a.getMateria().getIdMateria(),a.getMateria().getNombre(),a.getMateria().getAnio()} );
            }
        }
          
        }
        if(rbNoins.isSelected()){
            List<Materia> mat=cd.obtenerMateriasNOCursadas(al.getIdAlumno());
            for(Materia a: mat){
                
                modelo.addRow(new Object []{a.getIdMateria(),a.getNombre(),a.getAnio()});
            }
        }
        

    }
  
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAnu;
    private javax.swing.JButton botonIns;
    private javax.swing.JButton botonSa;
    private javax.swing.JComboBox<Alumno> cbAlumnos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbInscriptas;
    private javax.swing.JRadioButton rbNoins;
    private javax.swing.JTable tMaterias;
    // End of variables declaration//GEN-END:variables
}
